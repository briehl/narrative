# This is a basic workflow to help you get started with Actions

name: CI-testing

# Controls when the action will run. Triggers the workflow on push or pull request
# events
on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'
        activate-environment: test-environment
        python-version: 3.6.10
        auto-activate-base: false
        auto-update-conda: true
        condarc-file: test/condarc.yml

    - name: Use Node js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    # gem install coveralls-lcov
    # pip install coveralls
    # npm install -g bower
    # npm install -g grunt-cli
    # npm install -g karma-cli
    - name: Install JS dependencies
      run: |
        npm ci
        npm install bower
        ./node_modules/bower/bin/bower install

    - name: Install Narrative Application
      shell: bash -l {0}
      run: |
          bash ./scripts/install_narrative.sh
          grunt minify
          sed <src/config.json.templ >src/config.json "s/{{ .Env.CONFIG_ENV }}/dev/"
          sed -i 's/{{ if ne .Env.CONFIG_ENV "prod" }} true {{- else }} false {{- end }}/true/' src/config.json
          jupyter notebook --version

    - name: Run Narrative Backend Unit Tests
      shell: bash -l {0}
      run: make test-backend

    - name: Coveralls Backend
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-backend
        parallel: true
        path-to-lcov: ./cover/status.json

    - name: Run Narrative Frontend Unit Tests
      shell: bash -l {0}
      run: make test-frontend-unit

    - name: Coveralls Frontend
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-frontend-unit
        parallel: true
        path-to-lcov: ./js-coverage/lcov/lcov.info

  finish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
